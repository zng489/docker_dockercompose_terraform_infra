services:
  airbyte-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=airbyte
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
    volumes:
      - airbyte-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "docker"]
      interval: 10s
      timeout: 5s
      retries: 5

  airbyte-server:
    image: airbyte/airbyte-server:latest
    depends_on:
      airbyte-db:
        condition: service_healthy
    environment:
      - WAIT_HOSTS=airbyte-db:5432
      - DATABASE_USER=docker
      - DATABASE_PASSWORD=docker
      - DATABASE_DB=airbyte
      - DATABASE_HOST=airbyte-db
      - CONFIG_ROOT=/data
      - TRACKING_STRATEGY=logging
    volumes:
      - airbyte-data:/data
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8001/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  airbyte-worker:
    image: airbyte/airbyte-worker:latest
    depends_on:
      airbyte-db:
        condition: service_healthy
    environment:
      - WAIT_HOSTS=airbyte-db:5432
      - DATABASE_USER=docker
      - DATABASE_PASSWORD=docker
      - DATABASE_DB=airbyte
      - DATABASE_HOST=airbyte-db
      - CONFIG_ROOT=/data
      - WORKSPACE_ROOT=/workspace
      - WORKSPACE_DOCKER_MOUNT=airbyte_workspace
      - LOCAL_DOCKER_MOUNT=/var/run/docker.sock
      - TRACKING_STRATEGY=logging
    volumes:
      - airbyte-data:/data
      - airbyte-workspace:/workspace
      - /var/run/docker.sock:/var/run/docker.sock

  airbyte-webapp:
    image: airbyte/airbyte-webapp:latest
    ports:
      - "8000:80"
    environment:
      - AIRBYTE_API_SERVER_HOST=airbyte-server
      - AIRBYTE_API_SERVER_PORT=8001
      - TRACKING_STRATEGY=logging
    depends_on:
      - airbyte-server

volumes:
  airbyte-db-data:
  airbyte-data:
  airbyte-workspace: